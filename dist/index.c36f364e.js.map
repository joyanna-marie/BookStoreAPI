{"mappings":"AAAA,qBAAqB;AACrB,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,iBAAiB,SAAS,cAAc,CAAC;AAC/C,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,MAAM;AAEZ,aAAa;AACb,MAAM;IACF,YAAY,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAE;QACxC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ;AAEA,WAAW;AACX,MAAM;IACF,aAAa,eAAe;QACxB,IAAI;YACA,QAAQ,GAAG,CAAC;YACZ,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAElC,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,QAAQ,GAAG,CAAC,+BAA+B;YAE3C,GAAG,WAAW,CAAC;QACnB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,yBAAyB;QAC3C;IACJ;IAGA,OAAO,YAAY,KAAK,EAAE;QACtB,SAAS,SAAS,GAAG;QACrB,MAAM,OAAO,CAAC,CAAC;YACX,IAAI,MAAM,SAAS,aAAa,CAAC;YACjC,IAAI,SAAS,GAAG,CAAC;oBACT,EAAE,KAAK,KAAK,CAAC;oBACb,EAAE,KAAK,MAAM,CAAC;oBACd,EAAE,KAAK,SAAS,CAAC;oBACjB,EAAE,KAAK,IAAI,CAAC;gFACgD,EAAE,KAAK,IAAI,CAAC;YAChF,CAAC;YACD,SAAS,WAAW,CAAC;QACzB;IACJ;IAEA,OAAO,cAAc,IAAI,EAAE;QACvB,IAAI,OAAO,SAAS,cAAc,CAAC;QACnC,IAAI,MAAM,SAAS,aAAa,CAAC;QAEjC,IAAI,SAAS,GAAG,CAAC;gBACT,EAAE,KAAK,KAAK,CAAC;gBACb,EAAE,KAAK,MAAM,CAAC;gBACd,EAAE,KAAK,SAAS,CAAC;gBACjB,EAAE,KAAK,IAAI,CAAC;;QAEpB,CAAC;QACD,KAAK,WAAW,CAAC;QACjB,GAAG,wBAAwB,CAAC;IAChC;IAEA,OAAO,cAAc;QACjB,WAAW,KAAK,GAAG;QACnB,YAAY,KAAK,GAAG;QACpB,eAAe,KAAK,GAAG;QACvB,UAAU,KAAK,GAAG;IACtB;IAEA,OAAO,UAAU,OAAO,EAAE,SAAS,EAAE;QACjC,MAAM,MAAM,SAAS,aAAa,CAAC;QACnC,IAAI,SAAS,GAAG,CAAC,YAAY,EAAE,WAAW;QAC1C,IAAI,SAAS,GAAG;QAChB,IAAI,YAAY,SAAS,aAAa,CAAC;QACvC,IAAI,OAAO,SAAS,aAAa,CAAC;QAClC,UAAU,YAAY,CAAC,KAAK;QAE5B,WAAW;YACP,SAAS,aAAa,CAAC,UAAU,MAAM;QAC3C,GAAG;IACP;IAEA,aAAa,QAAQ,IAAI,EAAE;QACvB,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,KAAK;gBAC9B,QAAQ;gBACR,MAAM,KAAK,SAAS,CAAC;gBACrB,SAAS;oBACL,gBAAgB;gBACpB;YACJ;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAElC,QAAQ,GAAG,CAAC;YACZ,GAAG,aAAa,CAAC;YACjB,GAAG,SAAS,CAAC,cAAc;QAC/B,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,sBAAsB;QACxC;IACJ;IAGA,aAAa,WAAW,EAAE,EAAE;QACxB,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW;YACjC,MAAM,OAAO,GAAG,YAAY,CAAC;YAC7B,GAAG,aAAa,CAAC,aAAa,CAAC,MAAM;YACrC,GAAG,SAAS,CAAC,gBAAgB;YAE7B,IAAI;gBACA,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,MAAM,EAAE;oBAAE,QAAQ;gBAAS;gBAElE,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;gBAElC,QAAQ,GAAG,CAAC;YAChB,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,wBAAwB;YAC1C;QACJ;IACJ;AACJ;AAEA,uBAAuB;AACvB,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,QAAQ,GAAG,CAAC;IACZ,GAAG,YAAY;IAEf,uBAAuB;IACvB,SAAS,gBAAgB,CAAC,SAAS,CAAC;QAChC,GAAG,UAAU,CAAC,EAAE,MAAM;IAC1B;AACJ;AAEA,oBAAoB;AACpB,SAAS,cAAc,CAAC,aAAa,gBAAgB,CAAC,UAAU,CAAC;IAC7D,EAAE,cAAc;IAEhB,IACI,WAAW,KAAK,KAAK,MACrB,YAAY,KAAK,KAAK,MACtB,eAAe,KAAK,KAAK,MACzB,UAAU,KAAK,KAAK,IAEpB,GAAG,SAAS,CAAC,6BAA6B;SACvC;QACH,mBAAmB;QACnB,MAAM,OAAO,IAAI,KAAK,WAAW,KAAK,EAAE,YAAY,KAAK,EAAE,eAAe,KAAK,EAAE,UAAU,KAAK;QAEhG,iBAAiB;QACjB,GAAG,OAAO,CAAC;QAEX,uBAAuB;QACvB,GAAG,SAAS,CAAC,cAAc;QAE3B,eAAe;QACf,GAAG,WAAW;IAClB;AACJ","sources":["index.js"],"sourcesContent":["// Selecting elements\r\nconst titleInput = document.getElementById(\"title\");\r\nconst authorInput = document.getElementById(\"author\");\r\nconst publisherInput = document.getElementById(\"publisher\");\r\nconst isbnInput = document.getElementById(\"isbn\");\r\nconst bookList = document.getElementById(\"book-list\");\r\nconst API = \"https://bookstore-api-six.vercel.app/api/books\";\r\n\r\n// Book Class\r\nclass Book {\r\n    constructor(title, author, publisher, isbn) {\r\n        this.title = title;\r\n        this.author = author;\r\n        this.publisher = publisher;\r\n        this.isbn = isbn;\r\n    }\r\n}\r\n\r\n// UI Class\r\nclass UI {\r\n    static async displayBooks() {\r\n        try {\r\n            console.log(\"Fetching books from API...\");\r\n            const response = await fetch(API);\r\n            if (!response.ok) throw new Error(\"Failed to fetch books\");\r\n\r\n            const books = await response.json();\r\n            console.log(\"Books fetched successfully:\", books);\r\n\r\n            UI.renderBooks(books);\r\n        } catch (error) {\r\n            console.error(\"Error fetching books:\", error);\r\n        }\r\n    }\r\n\r\n\r\n    static renderBooks(books) {\r\n        bookList.innerHTML = \"\"; \r\n        books.forEach((book) => {\r\n            let row = document.createElement(\"tr\");\r\n            row.innerHTML = `\r\n                <td>${book.title}</td>\r\n                <td>${book.author}</td>\r\n                <td>${book.publisher}</td>\r\n                <td>${book.isbn}</td>\r\n                <td><a href=\"#\" class=\"btn btn-danger btn-sm delete\" data-isbn=\"${book.isbn}\">X</a></td>\r\n            `;\r\n            bookList.appendChild(row);\r\n        });\r\n    }\r\n\r\n    static addToBookList(book) {\r\n        let list = document.getElementById(\"book-list\");\r\n        let row = document.createElement(\"tr\");\r\n        \r\n        row.innerHTML = `\r\n            <td>${book.title}</td>\r\n            <td>${book.author}</td>\r\n            <td>${book.publisher}</td>\r\n            <td>${book.isbn}</td>\r\n            <td><a href=\"#\" class=\"btn btn-danger btn-sm delete\">X</a></td>\r\n        `;\r\n        list.appendChild(row);\r\n        UI.storeBooksInLocalStorage(book);\r\n    }\r\n\r\n    static clearFields() {\r\n        titleInput.value = \"\";\r\n        authorInput.value = \"\";\r\n        publisherInput.value = \"\";\r\n        isbnInput.value = \"\";\r\n    }\r\n\r\n    static showAlert(message, className) {\r\n        const div = document.createElement(\"div\");\r\n        div.className = `alert alert-${className}`;\r\n        div.innerText = message;\r\n        let container = document.querySelector(\".container\");\r\n        let form = document.querySelector(\"#book-form\");\r\n        container.insertBefore(div, form);\r\n\r\n        setTimeout(() => {\r\n            document.querySelector(\".alert\").remove();\r\n        }, 3000);\r\n    }\r\n\r\n    static async addBook(book) {\r\n        try {\r\n            const response = await fetch(API, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(book),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            if (!response.ok) throw new Error(\"Failed to add book\");\r\n\r\n            console.log(\"Book added successfully.\");\r\n            UI.addToBookList(book);\r\n            UI.showAlert(\"Book Added\", \"success\");\r\n        } catch (error) {\r\n            console.error(\"Error adding book:\", error);\r\n        }\r\n    }\r\n\r\n\r\n    static async deleteBook(el) {\r\n        if (el.classList.contains(\"delete\")) {\r\n            const isbn = el.getAttribute(\"data-isbn\"); \r\n            el.parentElement.parentElement.remove(); \r\n            UI.showAlert(\"Book Removed\", \"success\");\r\n\r\n            try {\r\n                const response = await fetch(`${API}/${isbn}`, { method: \"DELETE\" });\r\n\r\n                if (!response.ok) throw new Error(\"Failed to delete book\");\r\n\r\n                console.log(\"Book deleted successfully.\");\r\n            } catch (error) {\r\n                console.error(\"Error deleting book:\", error);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Event: Display Books\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    console.log(\"DOMContentLoaded event fired, calling displayBooks()\");\r\n    UI.displayBooks();\r\n    \r\n    // Event: Remove a Book\r\n    bookList.addEventListener('click', (e) => {\r\n        UI.deleteBook(e.target);\r\n    });\r\n});\r\n\r\n// Event: Add a Book\r\ndocument.getElementById('book-form').addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n\r\n    if  (\r\n        titleInput.value === \"\" ||\r\n        authorInput.value === \"\" ||\r\n        publisherInput.value === \"\" ||\r\n        isbnInput.value === \"\"\r\n    ) {\r\n        UI.showAlert(\"Please fill in all fields\", \"danger\");\r\n    } else {\r\n        // Instantiate book\r\n        const book = new Book(titleInput.value, authorInput.value, publisherInput.value, isbnInput.value);\r\n        \r\n        // Add book to UI\r\n        UI.addBook(book);\r\n\r\n        // Show success message\r\n        UI.showAlert(\"Book Added\", \"success\");\r\n\r\n        // Clear fields\r\n        UI.clearFields();\r\n    }\r\n});\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}